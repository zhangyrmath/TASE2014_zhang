<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>
chan tick;
chan Leave,NonCross,Cross,Appr;
//chan priority default &lt; tick;

//bool train_pass=false;
/*
bool Pass_tick;
bool Close_tick;
bool Open_tick;
*/

//CCSL communication
int close, pass, open,mayPass;
//int mayPass=1;

void set_all_0(){
	close=0;
	pass=0;
	mayPass=0;
	open=0;
}

void Act_pass(){
	pass=1;
}

void Act_close(){
	close=1;
}

void Act_open(){
	open=1;
}

void Act_mayPass(){
	mayPass=1;
}

//base unit of CCSL clock
int unit=1; //unit for which staying in one state
</declaration><template><name>Gate</name><declaration>
clock x;

clock y;

bool Closed;

bool Unclosed;

bool Open=true;

void Closed_t() {
	Closed=true;
}

void Closed_f() {
	Closed=false;
}

void Unclosed_t() {
	Unclosed=true;
}

void Unclosed_f() {
	Unclosed=false;
}

void Open_t() {
	Open=true;
}

void Open_f() {
	Open=false;
}
</declaration><location id="id0" x="0" y="0"><name x="-20" y="20">Get_S106</name></location><location id="id1" x="200" y="0"><name x="180" y="20">Closing_S114</name><label kind="invariant" x="180" y="-30">y&lt;=4</label></location><location id="id2" x="400" y="0"><name x="380" y="20">Unclosed_S158</name><label kind="invariant" x="380" y="-30">y&lt;=1</label></location><location id="id3" x="600" y="150"><name x="580" y="170">Send_S131</name></location><location id="id4" x="800" y="150"><name x="780" y="170">Get_S140</name></location><location id="id5" x="1000" y="150"><name x="980" y="170">Opening_S149</name><label kind="invariant" x="980" y="120">y&lt;=4</label></location><location id="id6" x="1200" y="150"><name x="1168" y="184">Opening_F150</name><label kind="invariant" x="1190" y="165">y&lt;=0</label></location><location id="id7" x="1400" y="0"><name x="1380" y="20">F_211</name><label kind="invariant" x="1368" y="-8">y&lt;=0</label></location><location id="id8" x="600" y="-150"><name x="580" y="-130">S_164_171</name><label kind="invariant" x="580" y="-180">y&lt;=4</label></location><location id="id9" x="800" y="-75"><name x="780" y="-55">S_165_171</name><label kind="invariant" x="780" y="-105">y&lt;=4</label></location><location id="id10" x="1000" y="-75"><name x="980" y="-55">Send_S187</name></location><location id="id11" x="1200" y="-75"><name x="1180" y="-55">Get_S195</name></location><location id="id12" x="1400" y="-75"><name x="1380" y="-55">Opening_S203</name><label kind="invariant" x="1380" y="-105">y&lt;=4</label></location><location id="id13" x="1600" y="-75"><name x="1580" y="-55">Opening_F204</name><label kind="invariant" x="1584" y="-120">y&lt;=0</label></location><location id="id14" x="800" y="-225"><name x="780" y="-205">S_164_172</name></location><init ref="id0"/><transition><source ref="id0"/><target ref="id1"/><label kind="synchronisation" x="100" y="40">Appr?</label><label kind="assignment" x="20" y="30">y=0</label><nail x="100" y="50"/></transition><transition><source ref="id1"/><target ref="id2"/><label kind="guard" x="280" y="20">y==4</label><label kind="assignment" x="220" y="30">y=0,Open_f(),Closed_t(),Unclosed_t()</label><nail x="300" y="50"/></transition><transition><source ref="id2"/><target ref="id8"/><label kind="guard" x="480" y="-55">y==0</label><label kind="assignment" x="420" y="-45">y=0,Closed_f()</label><nail x="500" y="-25"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="480" y="95">y==1</label><label kind="assignment" x="420" y="105">Act_close(),y=0,Unclosed_f()</label><nail x="500" y="125"/></transition><transition><source ref="id3"/><target ref="id4"/><label kind="synchronisation" x="700" y="190">Cross!</label><label kind="assignment" x="620" y="180">y=0</label><nail x="700" y="200"/></transition><transition><source ref="id4"/><target ref="id5"/><label kind="synchronisation" x="900" y="190">Leave?</label><label kind="assignment" x="820" y="180">y=0</label><nail x="900" y="200"/></transition><transition><source ref="id5"/><target ref="id6"/><label kind="guard" x="1080" y="170">y==4</label><label kind="assignment" x="1020" y="180">y=0,Closed_f()</label><nail x="1100" y="200"/></transition><transition><source ref="id6"/><target ref="id7"/><label kind="guard" x="1280" y="95">y==0</label><label kind="assignment" x="1220" y="105">y=0</label><nail x="1300" y="125"/></transition><transition><source ref="id7"/><target ref="id0"/><label kind="assignment" x="1136" y="16">Act_open(),y=0,Open_t()</label><nail x="1504" y="52"/></transition><transition><source ref="id8"/><target ref="id14"/><label kind="guard" x="680" y="-168">y==4</label><label kind="assignment" x="648" y="-192">Act_close(),y=0</label><nail x="700" y="-138"/></transition><transition><source ref="id8"/><target ref="id9"/><label kind="synchronisation" x="700" y="-73">NonCross!</label><label kind="assignment" x="620" y="-83">y=0</label><nail x="700" y="-63"/></transition><transition><source ref="id9"/><target ref="id10"/><label kind="guard" x="880" y="-55">y==4</label><label kind="assignment" x="820" y="-45">Act_close(),y=0,Closed_t()</label><nail x="900" y="-25"/></transition><transition><source ref="id10"/><target ref="id11"/><label kind="synchronisation" x="1100" y="-35">Cross!</label><label kind="assignment" x="1020" y="-45">y=0,Unclosed_f()</label><nail x="1100" y="-25"/></transition><transition><source ref="id11"/><target ref="id12"/><label kind="synchronisation" x="1300" y="-35">Leave?</label><label kind="assignment" x="1220" y="-45">y=0</label><nail x="1300" y="-25"/></transition><transition><source ref="id12"/><target ref="id13"/><label kind="guard" x="1480" y="-55">y==4</label><label kind="assignment" x="1420" y="-45">y=0,Closed_f()</label><nail x="1500" y="-25"/></transition><transition><source ref="id13"/><target ref="id7"/><label kind="guard" x="1680" y="-55">y==0</label><label kind="assignment" x="1620" y="-45">y=0</label><nail x="1700" y="-25"/></transition><transition><source ref="id14"/><target ref="id10"/><label kind="synchronisation" x="900" y="-185">NonCross!</label><label kind="assignment" x="820" y="-195">y=0,Closed_t()</label><nail x="900" y="-175"/></transition></template><template><name>Train</name><declaration>
clock x;

clock y;

bool Lpass;

bool Lleav;

bool Lstop;

bool Lapp;

void Lpass_t() {
	Lpass=true;
}

void Lpass_f() {
	Lpass=false;
}

void Lleav_t() {
	Lleav=true;
}

void Lleav_f() {
	Lleav=false;
}

void Lstop_t() {
	Lstop=true;
}

void Lstop_f() {
	Lstop=false;
}

void Lapp_t() {
	Lapp=true;
}

void Lapp_f() {
	Lapp=false;
}

/*
void train_pass_h(){
	train_pass=true;
}
*/	</declaration><location id="id15" x="0" y="0"><name x="-20" y="20">Run_S3</name><label kind="invariant" x="-16" y="-40">y&lt;=1000</label></location><location id="id16" x="200" y="0"><name x="180" y="20">S_8_16</name><label kind="invariant" x="180" y="-30">y&lt;=5</label></location><location id="id17" x="400" y="75"><name x="380" y="95">S_8_17</name></location><location id="id18" x="600" y="75"><name x="580" y="95">Get_S58</name></location><location id="id19" x="800" y="150"><name x="780" y="170">Stop_S65</name><label kind="invariant" x="780" y="120">y&lt;=8</label></location><location id="id20" x="1000" y="150"><name x="980" y="170">Get_S74</name></location><location id="id21" x="1200" y="150"><name x="1180" y="170">Pass_S83</name><label kind="invariant" x="1180" y="120">y&lt;=10</label></location><location id="id22" x="1400" y="150"><name x="1380" y="170">Send_S91</name></location><location id="id23" x="1600" y="150"><name x="1568" y="176">Send_F92</name><label kind="invariant" x="1590" y="165">y&lt;=0</label></location><location id="id24" x="1800" y="150"><name x="1780" y="170">F_99</name><label kind="invariant" x="1776" y="104">y&lt;=0</label></location><location id="id25" x="800" y="0"><name x="780" y="20">Pass_S39</name><label kind="invariant" x="780" y="-30">y&lt;=10</label></location><location id="id26" x="1000" y="0"><name x="980" y="20">Send_S48</name></location><location id="id27" x="1200" y="0"><name x="1180" y="20">Send_F49</name><label kind="invariant" x="1190" y="15">y&lt;=0</label></location><location id="id28" x="400" y="-75"><name x="380" y="-55">S_9_16</name><label kind="invariant" x="380" y="-105">y&lt;=5</label></location><init ref="id15"/><transition><source ref="id15"/><target ref="id16"/><label kind="assignment" x="20" y="30">y=0,Lapp_t()</label><nail x="100" y="50"/></transition><transition><source ref="id16"/><target ref="id28"/><label kind="synchronisation" x="300" y="2">Appr!</label><label kind="assignment" x="220" y="-8">y=0</label><nail x="300" y="12"/></transition><transition><source ref="id16"/><target ref="id17"/><label kind="guard" x="280" y="57">y==5</label><label kind="assignment" x="220" y="67">y=0</label><nail x="300" y="87"/></transition><transition><source ref="id17"/><target ref="id18"/><label kind="synchronisation" x="500" y="115">Appr!</label><label kind="assignment" x="420" y="105">y=0,Lpass_t()</label><nail x="500" y="125"/></transition><transition><source ref="id18"/><target ref="id25"/><label kind="synchronisation" x="700" y="77">Cross?</label><label kind="assignment" x="620" y="67">y=0,Lapp_f()</label><nail x="700" y="87"/></transition><transition><source ref="id18"/><target ref="id19"/><label kind="synchronisation" x="700" y="152">NonCross?</label><label kind="assignment" x="620" y="142">y=0,Lapp_f()</label><nail x="700" y="162"/></transition><transition><source ref="id19"/><target ref="id20"/><label kind="guard" x="880" y="170">y==8</label><label kind="assignment" x="820" y="180">y=0,Lpass_f(),Lstop_t()</label><nail x="900" y="200"/></transition><transition><source ref="id20"/><target ref="id21"/><label kind="synchronisation" x="1100" y="190">Cross?</label><label kind="assignment" x="1020" y="180">y=0</label><nail x="1100" y="200"/></transition><transition><source ref="id21"/><target ref="id22"/><label kind="guard" x="1280" y="170">y==10</label><label kind="assignment" x="1208" y="184">Act_pass(),y=0,Lstop_f(),Lleav_t()</label><nail x="1300" y="200"/></transition><transition><source ref="id22"/><target ref="id23"/><label kind="synchronisation" x="1500" y="190">Leave!</label><label kind="assignment" x="1420" y="180">y=0</label><nail x="1500" y="200"/></transition><transition><source ref="id23"/><target ref="id24"/><label kind="guard" x="1680" y="170">y==0</label><label kind="assignment" x="1620" y="180">y=0,Lleav_f()</label><nail x="1700" y="200"/></transition><transition><source ref="id24"/><target ref="id15"/><label kind="assignment" x="1472" y="-104">y=0</label><nail x="1500" y="-116"/><nail x="540" y="-44"/></transition><transition><source ref="id25"/><target ref="id26"/><label kind="guard" x="880" y="20">y==10</label><label kind="assignment" x="800" y="40">Act_pass(),y=0,Lpass_f(),Lleav_t()</label><nail x="900" y="50"/></transition><transition><source ref="id26"/><target ref="id27"/><label kind="synchronisation" x="1100" y="40">Leave!</label><label kind="assignment" x="1020" y="30">y=0</label><nail x="1100" y="50"/></transition><transition><source ref="id27"/><target ref="id24"/><label kind="guard" x="1432" y="24">y==0</label><label kind="assignment" x="1408" y="40">y=0,Lleav_f()</label><nail x="1472" y="16"/></transition><transition><source ref="id28"/><target ref="id18"/><label kind="guard" x="480" y="-55">y==5</label><label kind="assignment" x="420" y="-45">y=0,Lpass_t()</label><nail x="500" y="-25"/></transition></template><template><name>CCSL1_2</name><declaration>int ub=100; //upperbound
clock x;
clock y;

int tick_pass, tick_close, tick_open, tick_mayPass;


void set_tick_0(){
	tick_close=0;
	tick_pass=0;
	tick_open=0;
	tick_mayPass=0;
}

void upd(){
	x=0;
	set_all_0();
	set_tick_0();
}

void upd_12(){
	x=0;
	set_all_0();
	tick_close=1;
}

void upd_23_1(){
	x=0;
	set_all_0();
	tick_mayPass=1;
}

void upd_23_2(){
	x=0;
	set_all_0();
	tick_pass=1;
	tick_mayPass=1;
}

void upd_31(){
	x=0;
	set_all_0();
	tick_open=1;
}

bool cond_22(){
	return pass==0 and mayPass==0;
}

bool cond_23_1(){
	return mayPass==1;
}

bool cond_23_2(){
	return pass==1 and mayPass==1;
}</declaration><location id="id29" x="0" y="-72"><name x="-10" y="-102">s3</name><label kind="invariant" x="-10" y="-57">x&lt;=1000</label></location><location id="id30" x="-216" y="-72"><name x="-226" y="-102">s2</name><label kind="invariant" x="-226" y="-57">x&lt;=1000</label></location><location id="id31" x="-384" y="-72"><name x="-394" y="-102">s1</name><label kind="invariant" x="-432" y="-56">x&lt;=1000</label></location><init ref="id31"/><transition><source ref="id29"/><target ref="id29"/><label kind="guard" x="-24" y="-152">open==0</label><label kind="assignment" x="-16" y="-168">upd()</label><nail x="-32" y="-136"/><nail x="40" y="-136"/></transition><transition><source ref="id30"/><target ref="id30"/><label kind="guard" x="-264" y="-152">cond_22()</label><label kind="assignment" x="-240" y="-168">upd()</label><nail x="-256" y="-136"/><nail x="-176" y="-136"/></transition><transition><source ref="id31"/><target ref="id31"/><label kind="guard" x="-408" y="-152">close==0</label><label kind="assignment" x="-400" y="-168">upd()</label><nail x="-416" y="-136"/><nail x="-352" y="-136"/></transition><transition><source ref="id29"/><target ref="id31"/><label kind="guard" x="-224" y="0">open==1</label><label kind="assignment" x="-240" y="-24">upd_31()</label><nail x="-88" y="0"/><nail x="-296" y="0"/></transition><transition><source ref="id30"/><target ref="id29"/><label kind="guard" x="-152" y="-48">cond_23_2()</label><label kind="assignment" x="-136" y="-72">upd_23_2()</label><nail x="-120" y="-48"/></transition><transition><source ref="id30"/><target ref="id29"/><label kind="guard" x="-144" y="-96">cond_23_1()</label><label kind="assignment" x="-160" y="-120">upd_23_1()</label><nail x="-120" y="-104"/></transition><transition><source ref="id31"/><target ref="id30"/><label kind="guard" x="-344" y="-88">close==1</label><label kind="assignment" x="-344" y="-72">upd_12()</label></transition></template><template><name>Tick</name><declaration>int ub=100;
clock x;</declaration><location id="id32" x="-184" y="-72"><label kind="invariant" x="-194" y="-57">x&lt;=1</label></location><location id="id33" x="-432" y="-72"><label kind="invariant" x="-442" y="-57">x&lt;=2</label></location><init ref="id33"/><transition><source ref="id32"/><target ref="id33"/><label kind="assignment" x="-368" y="-32">x=0, set_all_0()</label><nail x="-320" y="-24"/></transition><transition><source ref="id33"/><target ref="id32"/><label kind="synchronisation" x="-328" y="-144">tick!</label><label kind="assignment" x="-328" y="-112">x=0</label><nail x="-320" y="-120"/></transition></template><template><name>MayPass</name><declaration>clock x;</declaration><location id="id34" x="0" y="0"><label kind="invariant" x="-16" y="16">x&lt;=5</label></location><init ref="id34"/><transition><source ref="id34"/><target ref="id34"/><label kind="assignment" x="-40" y="-104">Act_mayPass(),x=0</label><nail x="-16" y="-16"/><nail x="-64" y="-80"/><nail x="64" y="-80"/></transition></template><system>
//system Gate, Train, CCSL1_2, Tick;
//system CCSL1_2, Tick;
system Gate, Train, CCSL1_2, MayPass;</system></nta>